package com.pmdb.coach.inbound.product.thumbnail;

import java.io.BufferedOutputStream;
import java.io.File;

import java.io.FileOutputStream;
import java.util.HashMap;

import org.apache.commons.codec.binary.Base64;


import com.pmdb.coach.db.PMDBObjectQuery;
import com.pmdb.coach.inbound.product.IBProductVO;
import com.pmdb.coach.util.CoachIBWSException;
import com.pmdb.coach.util.FormatHelper;
import com.pmdb.coach.util.PropertyReaderUtil;
import com.pmdb.coach.util.WSDebug;
import com.pmdbcoach.hibernate.skuintegration.PersistanctHelper;



public class IBProductThumbnailImpl {
	
	public IBProductThumbnailResponse procesInboundProductThumbnail(IBProductThumbnailRequest  productRequest){
		String eventId  = productRequest.getMessageID();
		com.pmdb.coach.util.WSDebug.debug(" ****** New Request Entering PLMIBPersistProductServiceImpl.processInboundProduct for eventId "+ eventId+"************************");
		printProductRequest(productRequest);
		IBProductThumbnailResponse productResponse = new IBProductThumbnailResponse();
		String applicationName = productRequest.getApplicationName();
		productResponse.setApplicationName(applicationName);
		productResponse.setMessageID(productRequest.getMessageID());
		productResponse.setActionName("Update");
		productResponse.setMessageDetails("Is Not Processed Yet");
		IBProductThumbnailMessage prodResp = new IBProductThumbnailMessage();
		productResponse.setPM_PM(prodResp);
		String actionName = "Update";
		try{
			HashMap<String, String> map = new HashMap<String, String>();
			map.put("EventID", eventId);
			IBProductThumbnail product = productRequest.getPM_PM();
			String branchId = product.getPmUniqueID();
			String stylenumber = "";
			try{
				
				IBProductVO productVo =null;
				productVo =(IBProductVO) new PMDBObjectQuery().getProduct("uniqueID", branchId);
				if(!FormatHelper.hasContent(productVo.getStyleNumber())){
					productResponse.setMessageDetails("Default Success as product doensn't have Style Number ");
					productResponse.setActionName(actionName);
					productResponse.setResultFlag("Success");
					productResponse.setMessageID(productRequest.getMessageID());
					return productResponse;
				}else
					stylenumber = productVo.getStyleNumber();
						
			}catch(Exception ex){
				ex.printStackTrace();
				productResponse.setMessageDetails("Error: While retrieving the Stylenumber for product ");
				productResponse.setActionName(actionName);
				productResponse.setResultFlag("Fail");
				String errorMsg = ex.getLocalizedMessage();
				if(FormatHelper.hasContent(errorMsg))
					productResponse.setMessageDetails(errorMsg);
				else
					productResponse.setMessageDetails("Error: Unknown Error occured in processing this request to get StyleNumber");
				WSDebug.debug("PLMIBPersistProductServiceImpl.processInboundProduct : sending the Fail response of "+productResponse.getMessageDetails()+" for eventId "+productRequest.getMessageID());
				printProductResponse(productResponse);
				WSDebug.debug("*** PLMIBPersistProductServiceImpl.processInboundProduct -- End of processing MSC request with EventID : "+productRequest.getMessageID()+"**********************");
				return productResponse;
			}
			String thumbnailImage= product.getPmImage();
			String imageName = product.getPmImageName();
			
			imageName = stylenumber;
			String imageId = product.getPmImageId();
			prodResp.setBranchId(branchId);
			map.put("BranchId", branchId);
			map.put("EventId", eventId);
			map.put("ThumbnailImage",thumbnailImage);
			map.put("ImageName", imageName);
			map.put("ImageId",imageId);
			map.put("ImageType", product.getPmImageType());
			//readProductObjectToMap(map,product);
			if(!com.pmdb.coach.util.FormatHelper.hasContent(thumbnailImage)&& !com.pmdb.coach.util.FormatHelper.hasContent(imageId)&&  !com.pmdb.coach.util.FormatHelper.hasContent(imageName)){
				actionName = "Delete";
				map.put("Action", actionName);
			}else{
				actionName = "Update";
				map.put("Action", actionName);
				if(!FormatHelper.hasContent(branchId)){
					String error ="Error Occured in Updating product : Please Provide the PLMID for request with eventId "+ eventId;
					CoachIBWSException excep =  new CoachIBWSException(error,error,null);
					throw excep;
				}
				if(!FormatHelper.hasContent(product.getPmImage())){
					String error ="Error Occured in Updating product : Please Provide the image Hex string  for request with eventId "+ eventId;
					CoachIBWSException excep =  new CoachIBWSException(error,error,null);
					throw excep;
				}
				if(!FormatHelper.hasContent(product.getPmImageName())){
					String error ="Error Occured in Updating product : Please Provide the name for the image with eventId "+ eventId;
					CoachIBWSException excep =  new CoachIBWSException(error,error,null);
					throw excep;
				}
				if(!FormatHelper.hasContent(product.getPmImageId())){
					String error ="Error Occured in Updating product : Please Provide the ID for the image with eventId "+ eventId;
					CoachIBWSException excep =  new CoachIBWSException(error,error,null);
					throw excep;
				}
		
			}
			
			String decodeString = decodeImage(thumbnailImage,imageName,actionName);// new HashMap();//PersistHelper.persistProductHelper(map);
			WSDebug.debug("the responseMap "+ decodeString);
			if(decodeString.indexOf("Error") > -1){
				productResponse.setResultFlag("Fail");
			}else{
				productResponse.setResultFlag("Success");
			}
			productResponse.setMessageDetails(decodeString);
			productResponse.setActionName(actionName);
		}catch(CoachIBWSException ex){
			WSDebug.debug("PLMIBPersistProductServiceImpl.processInboundProduct : CoachIBWSException occured "+productRequest.getMessageID());
			productResponse.setMessageDetails("Error: Unknown Error occured in processing this request ");
			productResponse.setActionName(actionName);
			productResponse.setResultFlag("Fail");
			String errorMsg = ex.getErrorMSG();
			if(FormatHelper.hasContent(errorMsg))
				productResponse.setMessageDetails(ex.getErrorMSG());
			else
				productResponse.setMessageDetails("Error: Unknown Error occured in processing this request ");
			WSDebug.debug("PLMIBPersistProductServiceImpl.processInboundProduct : sending the Fail response of "+productResponse.getMessageDetails()+" for eventId "+productRequest.getMessageID());
			printProductResponse(productResponse);
			WSDebug.debug("*** PLMIBPersistProductServiceImpl.processInboundProduct -- End of processing MSC request with EventID : "+productRequest.getMessageID()+"**********************");
			return productResponse;
		}catch(Exception ex){
			WSDebug.debug("PLMIBPersistProductServiceImpl.processInboundProduct : : Exception occured "+productRequest.getMessageID());
			ex.printStackTrace();
			productResponse.setMessageDetails("Error: Unknown Error occured in processing this request ");
			productResponse.setActionName(actionName);
        	productResponse.setResultFlag("Fail");
			String errorMsg = ex.getLocalizedMessage();
			if(FormatHelper.hasContent(errorMsg))
				productResponse.setMessageDetails(ex.getLocalizedMessage());
			else
				productResponse.setMessageDetails("Error: Unknown Error occured in processing this request ");

			WSDebug.debug("PLMIBPersistProductServiceImpl.processInboundProduct : sending Fail response for "+ productRequest.getMessageID());
			printProductResponse(productResponse);
			WSDebug.debug("***PLMMaterialPersistServiceImpl.processInboundProduct --- End of processing request with EventID : "+productRequest.getMessageID()+"**********************");
			return productResponse;
		}
		printProductResponse(productResponse);
		return productResponse;
	}
	
	public static String decodeImage(String thumbnailImage,String imageName,String actionName)throws Exception{
		
		try{
			String outputfolder = PropertyReaderUtil.getValue("images.folder");	
			if("Delete".equalsIgnoreCase(actionName)){
				File file = new File(outputfolder+"/"+imageName+".jpg");
				file.delete();
			
			}else{
				BufferedOutputStream output= null;
				
				output = new BufferedOutputStream(new FileOutputStream(outputfolder+"/"+imageName+".jpg"));
				byte[] decodedArray = (Base64.decodeBase64(thumbnailImage.getBytes()));
				output.write(decodedArray);
				output.flush();
				output.close();
			}
		
		}catch(Exception ex){
			ex.printStackTrace();
			return "Error : "+ ex.getLocalizedMessage();
			//throw new Exception("ERROR: UNABLE TO GET THE THUMBNAIL:"+ex.getLocalizedMessage() + " INTEGRATION:005");
		}
		return imageName +" update successfully in PMDB";
	}
	public static void printProductResponse(IBProductThumbnailResponse productResponse){
		WSDebug.debug("EventId: "+ productResponse.getMessageID());
		WSDebug.debug("Action:   "+ productResponse.getActionName());
		WSDebug.debug("Result:  "+ productResponse.getResultFlag());
		WSDebug.debug("Response Message:  " + productResponse.getMessageDetails());
		WSDebug.debug("Product BranchID " + productResponse.getPM_PM().getBranchId());
	}
	public static void printProductRequest(IBProductThumbnailRequest productRequest){
		WSDebug.debug("EventId: "+ productRequest.getMessageID());
		WSDebug.debug("Product BranchID:   "+ productRequest.getPM_PM().getPmUniqueID());
		WSDebug.debug("Design Card:  "+ productRequest.getPM_PM().getPmImage());
		WSDebug.debug("Image ID:  " + productRequest.getPM_PM().getPmImageId());
		WSDebug.debug("Product BranchID " + productRequest.getPM_PM().getPmImageName());
	}
	
	
}
